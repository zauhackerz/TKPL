{
  "name": "bespoke",
  "title": "Bespoke.js",
  "version": "1.0.0",
  "description": "DIY Presentation Micro-Framework",
  "author": {
    "name": "Mark Dalgleish",
    "url": "http://markdalgleish.com"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "scripts": {
    "test": "gulp",
    "coveralls": "gulp coveralls"
  },
  "main": "./lib/bespoke.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/markdalgleish/bespoke.js.git"
  },
  "devDependencies": {
    "browserify": "~4.1.5",
    "function-bind": "~0.1.0",
    "gulp": "^3.8.0",
    "gulp-clean": "~0.2.4",
    "gulp-coveralls": "~0.1.0",
    "gulp-gzip": "0.0.8",
    "gulp-header": "~1.0.2",
    "gulp-jshint": "~1.3.4",
    "gulp-karma": "0.0.2",
    "gulp-micro": "~0.1.2",
    "gulp-rename": "^1.2.0",
    "gulp-uglify": "~0.3.0",
    "istanbul": "^0.2.11",
    "jshint-stylish": "~0.1.5",
    "karma": "~0.10.9",
    "karma-browserify": "~0.2.1",
    "karma-coverage": "~0.1.5",
    "karma-jasmine": "~0.1.5",
    "karma-phantomjs-launcher": "~0.1.4",
    "karma-script-launcher": "~0.1.0",
    "lodash": "~2.4.1",
    "requirejs": "~2.1.10",
    "vinyl-map": "^1.0.1",
    "vinyl-source-stream": "~0.1.1",
    "vinyl-buffer": "0.0.0",
    "gulp-util": "^2.2.16"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://mit-license.org/markdalgleish"
    }
  ],
  "keywords": [
    "presentation",
    "html5",
    "keynote",
    "powerpoint"
  ],
  "readme": "[![Build Status](https://secure.travis-ci.org/markdalgleish/bespoke.js.png?branch=master)](http://travis-ci.org/markdalgleish/bespoke.js) [![Coverage Status](https://coveralls.io/repos/markdalgleish/bespoke.js/badge.png)](https://coveralls.io/r/markdalgleish/bespoke.js)\n\n# Bespoke.js\n\n### DIY Presentation Micro-Framework\n\n[Bespoke.js](http://markdalgleish.com/projects/bespoke.js) is a super minimal (1KB min'd and gzipped), modular presentation library for modern browsers, designed to foster a rich [plugin ecosystem](#plugins).\n\nThe core library [sets up the presentation](#javascript), provides a simple [control API](#control-api) and manages [events](#events).\n\nAny other functionality, from [keyboard](https://github.com/markdalgleish/bespoke-keys) and [touch](https://github.com/markdalgleish/bespoke-touch) interactions to [CSS classes](https://github.com/markdalgleish/bespoke-classes), [bullet lists](https://github.com/markdalgleish/bespoke-bullets) and [hash routing](https://github.com/markdalgleish/bespoke-hash), is implemented as a [plugin](#plugins). Joining the Bespoke.js plugin ecosystem is simple with [Bespoke.js Plugin Generator](https://github.com/markdalgleish/generator-bespokeplugin).\n\n## Creating a Presentation\n\nDue to the highly modular nature of Bespoke.js, the quickest way to get started is with [Bespoke.js Generator](https://github.com/markdalgleish/generator-bespoke), a [Yeoman](http://yeoman.io) generator that scaffolds a boilerplate presentation with a [Grunt](http://gruntjs.com) build system.\n\nAssuming you have [Node.js](http://nodejs.org) installed, in a blank directory:\n\n```bash\n$ npm install -g generator-bespoke\n$ yo bespoke\n```\n\nIn your newly scaffolded project, you can use the following Grunt tasks:\n\n * ```$ grunt server``` to run a preview server with LiveReload.\n * ```$ grunt deploy``` to deploy to GitHub Pages.\n * ```$ grunt``` to compile static assets to 'public'.\n\nFor more detailed instructions, check out the [Bespoke.js Generator](https://github.com/markdalgleish/generator-bespoke) repo.\n\nIf you'd prefer to craft a new presentation from scratch, you can install Bespoke.js from [npm](http://npmjs.org) with `npm install bespoke`, [Bower](http://bower.io) with `bower install bespoke.js`, or manually download either the [production version][min] or the [development version][max]. The Bespoke.js core is extremely lightweight, so you'll probably want to include some [plugins](#plugins).\n\n[min]: https://raw.github.com/markdalgleish/bespoke.js/master/dist/bespoke.min.js\n[max]: https://raw.github.com/markdalgleish/bespoke.js/master/dist/bespoke.js\n\n## Basic Usage\n\n### Loading Bespoke\n\nBespoke.js is shipped in a [UMD format](https://github.com/umdjs/umd), meaning that `bespoke` and its plugins are available as CommonJS/AMD modules or browser globals.\n\n### Markup\n\nIt's completely up to you which tags you use, but the following is a good starting point:\n\n```html\n<article id=\"presentation\">\n  <section>Slide 1</section>\n  <section>Slide 2</section>\n  <section>Slide 3</section>\n</article>\n```\n\n#### JavaScript\n\nTo create a new presentation, Bespoke.js provides the `from(selector[, plugins])` method, which takes a selector or element reference and an array of [plugins](#plugins), and returns a [deck instance](#deck-instances).\n\n```js\nvar deck = bespoke.from('#presentation', [plugins]);\n\n// Next slide\ndeck.next();\n\n// Previous slide\ndeck.prev();\n\n// Go to a specific slide\ndeck.slide(0);\n\n// Get the active slide index\ndeck.slide(); // 0\n```\n\n## Plugins\n\n### Official Plugins\n\nAll official plugins can be installed from npm or Bower, e.g. `$ npm install bespoke-keys` or `$ bower install bespoke-touch`\n\n - [bespoke-keys](https://github.com/markdalgleish/bespoke-keys) for keyboard interaction.\n - [bespoke-touch](https://github.com/markdalgleish/bespoke-touch) for touch interaction.\n - [bespoke-classes](https://github.com/markdalgleish/bespoke-classes) for deck status classes.\n - [bespoke-bullets](https://github.com/markdalgleish/bespoke-bullets) for animated bullet lists.\n - [bespoke-scale](https://github.com/markdalgleish/bespoke-scale) for responsive slide scaling.\n - [bespoke-hash](https://github.com/markdalgleish/bespoke-hash) for hash routing.\n - [bespoke-state](https://github.com/markdalgleish/bespoke-state) for slide-specific deck styles.\n - [bespoke-progress](https://github.com/markdalgleish/bespoke-progress) for progress bars.\n - [bespoke-forms](https://github.com/markdalgleish/bespoke-forms) for form element support.\n - [bespoke-loop](https://github.com/markdalgleish/bespoke-loop) for looped presentations.\n - [bespoke-vcr](https://github.com/markdalgleish/bespoke-vcr) for recording and playback.\n\n### Using Plugins\n\nAll official plugins are provided in a [UMD format](https://github.com/umdjs/umd), meaning they are available as CommonJS/AMD modules or browser globals.\n\nFor example, if you're using CommonJS modules via [browserify](http://browserify.org/) or [webpack](http://webpack.github.io/), it would look something like this:\n\n```js\nvar bespoke = require('bespoke'),\n  classes = require('bespoke-classes'),\n  keys = require('bespoke-keys'),\n  touch = require('bespoke-touch');\n\nvar deck = bespoke.from('#presentation', [\n  classes(),\n  keys(),\n  touch()\n]);\n```\n\nIf you're using browser globals, all official plugins are added to the `bespoke.plugins` object, for example:\n\n```js\nvar deck = bespoke.from('#presentation', [\n  bespoke.plugins.classes(),\n  bespoke.plugins.keys(),\n  bespoke.plugins.touch()\n]);\n```\n\n## Advanced Usage\n\n### From HTMLElement\n\nIf you already have a reference to a DOM node, you can pass it directly to the `from` method.\n\n```js\nbespoke.from(element);\n```\n\n### Deck Instances\n\nDeck instances are provided to plugins and returned when instantiating a presentation. The following properties are available on each instance.\n\n*Note: The optional [`eventData`](#custom-event-data) parameter is an object that will be merged with the `event` object in subsequent [event handlers](#events).*\n\n<table>\n  <tr>\n    <td><strong>next(<em>[eventData]</em>)</strong></td>\n    <td>Next slide.</td>\n  </tr>\n  <tr>\n    <td><strong>prev(<em>[eventData]</em>)</strong></td>\n    <td>Previous slide.</td>\n  </tr>\n  <tr>\n    <td><strong>slide([<em>index[, eventData]]</em>)</strong></td>\n    <td>Get or set the active slide index.</td>\n  </tr>\n  <tr>\n    <td><strong>on(<em>event, callback</em>)</strong></td>\n    <td>Attach <a href=\"#events\">event handlers</a></td>\n  </tr>\n  <tr>\n    <td><strong>fire(<em>event[, eventData]</em>)</strong></td>\n    <td>Fire custom events. <em>This method is primarily designed for plugin authors.</em></td>\n  </tr>\n  <tr>\n    <td><strong>parent</strong></td>\n    <td>The deck's parent element</td>\n  </tr>\n  <tr>\n    <td><strong>slides</strong></td>\n    <td>An array of slide elements</td>\n  </tr>\n</table>\n\n### Events\n\n##### Binding Events\n\nEvents are bound via the [deck instance](deck-instances). Each event is passed an event object containing a reference to the relevant slide and its index.\n\n```js\ndeck.on(eventName, function(event) {\n  event.slide; // Relevant slide\n  event.index; // Index of relevant slide\n\n  // Prevent default functionality (for deck interaction events only)\n  return false;\n});\n```\n\n##### Standard Events\n\nIn most cases, you will only need to use these standard events.\n\n<table>\n  <tr>\n    <td><strong>activate</strong></td>\n    <td>A slide has been activated. <strong>event.slide</strong> is the <em>activated</em> slide.</td>\n  </tr>\n  <tr>\n    <td><strong>deactivate</strong></td>\n    <td>A slide has been deactivated. <strong>event.slide</strong> is the <em>deactivated</em> slide.</td>\n  </tr>\n</table>\n\n##### Deck Interaction Events\n\nThese events are fired when the deck has been interacted with, but *before* the interaction has had any effect.\n\nThis allows you to intercept the default behaviour by returning `false` from the event handler.\n\n<table>\n  <tr>\n    <td><strong>next</strong></td>\n    <td>The next slide has been requested, even if last slide is active. <strong>event.slide</strong> is the <em>current</em> slide.</td>\n  </tr>\n  <tr>\n    <td><strong>prev</strong></td>\n    <td>The previous slide has been requested, even if first slide is active. <strong>event.slide</strong> is the <em>current</em> slide.</td>\n  </tr>\n  <tr>\n    <td><strong>slide</strong></td>\n    <td>A specific slide has been requested. <strong>event.slide</strong> is the <em>requested</em> slide.</td>\n  </tr>\n</table>\n\n##### Unbinding events\n\nWhen binding events, the `on` method returns a function that can be used to remove the event handler.\n\n```js\nvar off = deck.on('activate', function() {\n  // ...\n});\n\n// Unbind event\noff();\n```\n\n## Creating Plugins\n\nWant a boilerplate plugin? Use the official [Bespoke.js Plugin Generator](https://github.com/markdalgleish/generator-bespokeplugin).\n\nIf you'd like to learn by example, check out the [list of existing plugins](#plugins).\n\n### Basic Plugins\n\nPlugins are simply functions that are called when presentations are created. They are passed a [deck instance](#deck-instances) which allows you to interact with the deck's state, bind events and modify its elements.\n\nTo be consistent with the suite of official Bespoke.js plugins, it is highly recommended that you implement your plugin as a function that takes configuration and returns a plugin function.\n\n```js\n// Creating the plugin\nvar myPlugin = function() {\n  return function() {\n    deck.on('activate', function(e) {\n      console.log('Activated slide ' + (e.index + 1) + ' of ' + deck.slides.length);\n    });\n  }\n};\n```\n\nThe plugin can now be provided in the plugins array when using the `from(selector[, plugins])` method.\n\n```js\n// Using the plugin\nbespoke.from('#presentation', [\n  myPlugin()\n]);\n```\n\n### Plugins with Options\n\nIf your plugin needs some configurability, your plugin factory function can take options and return a configured plugin function.\n\n```js\n// Creating the plugin with options\nvar myPlugin = function(options) {\n  return function(deck) {\n    var showTotal = options && options.showTotal;\n\n    deck.on('activate', function(e) {\n      console.log('Activated slide ' + (e.index + 1) +\n        (showTotal ? ' of ' + deck.slides.length : ''));\n    });\n  }\n};\n\n// Using the plugin with options\nbespoke.from('#presentation', [\n  myPlugin({ showTotal: true })\n]);\n```\n\n### Custom Event Data\n\nAdditional event data can be supplied to `next`, `prev` and `slide`, which is merged with the final `event` object in subsequent event handlers.\n\nThis functionality is particularly useful if you need to differentiate between events caused by your plugin, and those caused by your end users or other plugins.\n\n```js\nvar myPlugin = function() {\n  return function(deck) {\n\n    // Differentiating our plugin's events\n    deck.on('activate', function(event) {\n      if (event.foo === 'bar') {\n        // Triggered by my plugin...\n      } else {\n        // Triggered by end user, or another plugin...\n      }\n    });\n\n    // Providing custom event data\n    deck.next({\n      foo: 'bar'\n    });\n\n  };\n}\n```\n\n## Presentations\n\n - [Build Wars: Gulp vs Grunt](http://markdalgleish.github.io/presentation-build-wars-gulp-vs-grunt/) by [Mark Dalgleish](http://twitter.com/markdalgleish)\n - [Bespoke.js: The Road to 1KB](http://markdalgleish.github.io/presentation-bespoke.js-the-road-to-1kb/) by [Mark Dalgleish](http://twitter.com/markdalgleish)\n - [DIY Presentations With Bespoke.js](http://markdalgleish.com/presentations/bespoke.js/) by [Mark Dalgleish](http://twitter.com/markdalgleish)\n - [Javascript's Slightly Stricter Mode](http://geelen.github.io/web-directions-talk/) by [Glen Maddern](http://twitter.com/glenmaddern)\n - [The Trials of Transition Height: Auto](http://superhighfives.github.io/tweetflight-presentation/) by [Charlie Gleason](http://twitter.com/superhighfives)\n - [Welcome Our New ES5 Overlords](http://mikemaccana.github.io/rejectjs2013) by [Mike MacCana](https://twitter.com/mikemaccana)\n - [Rapid Web App Dev With Yeoman](http://mjt01.github.io/slides-yeoman/) by [Michael Taranto](http://twitter.com/michaeltaranto)\n - [Projects vs Products](http://joho.github.io/wdyk/) by [John Barton](http://twitter.com/johnbarton)\n - [Learn You The Node.js For Much Win](http://r.va.gg/presentations/campjs-learn-you-node/) by [Rod Vagg](http://twitter.com/rvagg)\n - [A Real Database Rethink](http://r.va.gg/presentations/nodeconfeu.2013) by [Rod Vagg](http://twitter.com/rvagg)\n - [Feature Flags with Directives](http://mjt01.github.io/slides-feature-flags/) by [Michael Taranto](http://twitter.com/michaeltaranto)\n - [Introduction to hapi](http://wolfe.id.au/presentations/hapi/) by [Mark Wolfe](http://twitter.com/wolfeidau)\n - [How to Cook a Graph Database in a Night](http://nodejsconfit.levelgraph.io) by [Matteo Collina](http://twitter.com/matteocollina)\n - [Asynchronous JavaScript Interfaces](http://medikoo.com/asynchronous-javascript-interfaces/?notes) by [Mariusz Nowak](http://medikoo.com)\n - [MQTT and Node.js - Messaging in the Internet of Things](http://mcollina.github.io/mqtt_and_nodejs/) by [Matteo Collina](http://twitter.com/matteocollina)\n\nMade a presentation with Bespoke.js? [Let me know](http://twitter.com/markdalgleish).\n\n## Questions?\n\nContact me on GitHub or Twitter: [@markdalgleish](http://twitter.com/markdalgleish)\n\n## License\n\n[MIT License](http://markdalgleish.mit-license.org)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/markdalgleish/bespoke.js/issues"
  },
  "_id": "bespoke@1.0.0",
  "dist": {
    "shasum": "6cde8e1760d5cd046a1cb1c36117c203271328af"
  },
  "_from": "bespoke@^1.0.0",
  "_resolved": "https://registry.npmjs.org/bespoke/-/bespoke-1.0.0.tgz"
}
